lane :bb do
  new_build_number = increment_build_number()

  git_add(path: "Wallet.xcodeproj/project.pbxproj")
  git_add(path: "App macOS/Info.plist")
  git_add(path: "App iOS/Info.plist")
  git_commit(
    path: ["Wallet.xcodeproj/project.pbxproj", "App macOS/Info.plist", "App iOS/Info.plist"],
    message: "bump build number #{new_build_number}"
  )

  push_to_git_remote
end

lane :bump do |options|
  current_version = get_version_number(xcodeproj: "Wallet.xcodeproj", target: "Big Wallet")
  version_parts = current_version.split(".").map(&:to_i)
  version_parts[-1] += 1
  new_version = options[:version] || version_parts.join(".")
  sh("sed -i '' -e 's/MARKETING_VERSION \\= [^\\;]*\\;/MARKETING_VERSION = #{new_version};/' ../Wallet.xcodeproj/project.pbxproj")
  ["macOS", "iOS"].each do |os|
    sh("sed -i '' -e 's/\"version\": \"[^\"]*\"/\"version\": \"#{new_version}\"/' ../Safari\\ #{os}/Resources/manifest.json")
  end
  increment_version_number(version_number: new_version)
  increment_build_number()

  commit_version_bump(
    message: "bump version to #{new_version} (#{get_build_number})",
    xcodeproj: "Wallet.xcodeproj",
    force: true
  )

  push_to_git_remote
end

lane :update_and_login do
  local_fastlane_password = ENV['FASTLANE_PASSWORD']
  ENV['FASTLANE_PASSWORD'] = nil

  require 'spaceship'
  Spaceship::Tunes.login('ivan@ivan.lol')

  update_fastlane
  ENV['FASTLANE_PASSWORD'] = local_fastlane_password
end

lane :deliver_metadata do

  update_and_login
  
  platform :ios do
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/ios",
      overwrite_screenshots: true,
      platform: "ios",
      run_precheck_before_submit: false,
      force: true,
    )
  end

  platform :mac do
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/macos",
      overwrite_screenshots: true,
      platform: "osx",
      run_precheck_before_submit: false,
      force: true,
    )
  end
  
end

lane :clean do
  sh "rm -rf #{File.expand_path('build')}"
end

lane :deliver_metadata_visionos do
  update_and_login
  platform :xros do
    deliver(
      metadata_path: "./fastlane/metadata",
      platform: "xros",
      run_precheck_before_submit: false,
      force: true,
      ignore_language_directory_validation: true,
    )
  end
end

lane :release_ios do

  update_and_login
  
  platform :ios do
    gym(scheme: "Wallet iOS", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/ios",
      overwrite_screenshots: true,
      platform: "ios",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end

  clean
end

lane :release_macos do

  update_and_login

  platform :mac do
    gym(scheme: "Wallet", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/macos",
      overwrite_screenshots: true,
      platform: "osx",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end

  clean
end


lane :release do

  update_and_login
  
  platform :ios do
    gym(scheme: "Wallet iOS", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/ios",
      overwrite_screenshots: true,
      platform: "ios",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end

  platform :mac do
    gym(scheme: "Wallet", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      screenshots_path: "./fastlane/screenshots/macos",
      overwrite_screenshots: true, 
      platform: "osx",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end
  
  platform :xros do
    gym(scheme: "Wallet visionOS", output_directory: "fastlane/build", clean: true)
    deliver(
      metadata_path: "./fastlane/metadata",
      platform: "xros",
      run_precheck_before_submit: false,
      force: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end

  clean
end
